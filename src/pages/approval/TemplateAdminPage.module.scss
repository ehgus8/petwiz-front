.pageContainer {
    display: flex;
    height: calc(100vh - 120px); // Adjust based on actual header height
    background-color: #f4f6f8;
}

.sidebar {
    width: 240px;
    background-color: #ffffff;
    border-right: 1px solid #e9e9e9;
    display: flex;
    flex-direction: column;
    padding: 1rem;
}

.sidebarHeader {
    padding-bottom: 1rem;
    border-bottom: 1px solid #e9e9e9;
    
    h4 {
        margin: 0;
        font-size: 1.1rem;
        color: #333;
    }
}

.categoryList {
    flex-grow: 1;
    overflow-y: auto;
    list-style-type: none;
    margin: 0;
    padding: 1rem 0;
}

.categoryItem {
    padding: 12px 15px;
    cursor: pointer;
    border-radius: 6px;
    margin-bottom: 5px;
    transition: background-color 0.2s;
    display: flex;
    justify-content: space-between;
    align-items: center;

    &:hover {
        background-color: #f0f2f5;
    }

    &.active {
        background-color: #e6f7ff;
        color: #1890ff;
        font-weight: 600;
    }

    .categoryInfo {
        display: flex;
        flex-direction: column;
    }

    .categoryName {
        font-size: 14px;
    }

    .categoryDesc {
        font-size: 12px;
        color: #888;
        margin-top: 4px;
    }

    .editButton {
        background: none;
        border: 1px solid #d9d9d9;
        padding: 4px 8px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 12px;
        transition: all 0.2s;

        &:hover {
            background-color: #f5f5f5;
            border-color: #1890ff;
            color: #1890ff;
        }
    }
}

.categoryContent {
    display: flex;
    align-items: center;
    gap: 8px;
}

.editButton {
    background: none;
    border: none;
    color: #888;
    cursor: pointer;
    padding: 4px;
    border-radius: 4px;
    font-size: 12px;
    visibility: hidden; /* 기본적으로 숨김 */
    opacity: 0;
    transition: opacity 0.2s, background-color 0.2s;
    
    .categoryItem:hover & {
        visibility: visible; /* 부모에 호버 시 보이게 */
        opacity: 1;
    }

    &:hover {
        background-color: #e0e0e0;
        color: #333;
    }
}


.error {
    color: #d9534f;
    padding: 0.75rem 1rem;
}

.addCategoryButton {
    width: 100%;
    padding: 10px;
    background-color: #f8f9fa;
    border: 1px dashed #ced4da;
    border-radius: 6px;
    cursor: pointer;
    text-align: center;
    margin-top: auto;
    color: #495057;
    transition: background-color 0.2s, border-color 0.2s;
    
    &:hover {
        background-color: #f1f3f5;
        border-color: #adb5bd;
    }
}

.mainContent {
    flex-grow: 1;
    padding: 2rem 2.5rem;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
}

.mainHeader {
    margin-bottom: 1.5rem;
    h2 {
        margin: 0;
        font-size: 1.8rem;
        font-weight: 700;
    }
}

.controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  gap: 12px;
  flex-wrap: nowrap; /* 한 줄 유지 */
  overflow-x: auto; /* 좁은 화면에서 가로 스크롤 */
  -webkit-overflow-scrolling: touch;
}

.searchBar {
  flex: 1 1 260px;
  input {
    width: 100%;
    max-width: 420px;
    padding: 0.7rem 1rem;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    font-size: 0.95rem;
    box-sizing: border-box;
  }
}

.filterTabs {
  display: flex;
  gap: 8px;
  flex: 0 0 auto;

  button {
    padding: 0.6rem 1rem;
    background-color: #fff;
    color: #495057;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.95rem;
    font-weight: 500;
    white-space: nowrap;
    transition: background-color 0.15s ease, border-color 0.15s ease, color 0.15s ease;

    &:hover {
      background-color: #f1f3f5;
      border-color: #cfd8dc;
    }

    &.active {
      background-color: #007bff;
      border-color: #007bff;
      color: #fff;
      font-weight: 700;
    }
  }
}

.actions {
  flex: 0 0 auto;
  .addButton {
    height: 40px;
    padding: 0 16px;
    background-color: #0052cc;
    color: #fff;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.95rem;
    white-space: nowrap;
    transition: background-color 0.2s ease;
    &:hover { background-color: #0041a3; }
  }
}

@media (max-width: 768px) {
  .controls { gap: 8px; }
  .searchBar { flex: 1 1 200px; }
}

.templateListContainer {
    background-color: #ffffff;
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid #e9e9e9;
    flex-grow: 1;
}

.templateItem {
    display: flex;         /* 1. Flexbox 레이아웃 적용 */
    align-items: center;   /* 2. 자식 요소들을 수직 중앙 정렬 */
    gap: 1rem;             /* 3. 자식 요소들 사이의 간격 추가 */
    padding: 1.25rem 1rem;
    border-bottom: 1px solid #f1f3f5;
    transition: background-color 0.2s;

    &:last-child {
        border-bottom: none;
    }

    &:hover {
        background-color: #fafafa;
    }
}

.checkboxContainer {
    flex-shrink: 0; /* 크기가 줄어들지 않도록 고정 */
    padding-right: 0.5rem;
    input[type="checkbox"] {
        width: 18px;
        height: 18px;
    }
}

.templateDetails {
    flex-grow: 1;   /* 4. 남는 공간을 모두 차지 */
    min-width: 0;   /* 5. 내용이 길어져도 줄어들 수 있도록 허용 (가장 중요!) */
}
.templateTitle {
    font-size: 1.05rem;
    font-weight: 600;
    color: #343a40;
    margin-bottom: 0.25rem;
}

.statusTag {
    font-size: 0.75rem;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    font-weight: 600;

    &.active {
        background-color: #dbeafe;
        color: #1e40af;
    }
    &.inactive {
        background-color: #f3f4f6;
        color: #4b5563;
    }
}

.templateDescription {
    font-size: 0.9rem;
    color: #6c757d;
    /* 6. 단어가 길어져도 자연스럽게 줄바꿈되도록 설정 */
    word-break: break-word; 
    white-space: normal; /* 여러 줄 표시 허용 */
}

.templateActions {
    flex-shrink: 0; /* 7. 버튼 영역은 크기가 줄어들지 않도록 고정 */
    display: flex;
    gap: 0.5rem;
    button {
        background: #fff;
        border: 1px solid #ced4da;
        color: #495057;
        padding: 0.4rem 1rem;
        font-size: 0.9rem;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.2s, border-color 0.2s;

        &:hover {
            background-color: #f8f9fa;
            border-color: #adb5bd;
        }
    }
}

.noResults {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    text-align: center;
    color: #868e96;
    font-size: 1rem;
} 
/* --- 📱 모바일 반응형 스타일 (768px 미만일 때 적용) --- */
@media (max-width: 768px) {
    .pageContainer {
      // 1. 레이아웃을 수직으로 변경
      flex-direction: column;
    }
  
    // 2. 데스크탑용 사이드바 숨기기
    .sidebar {
      display: none;
    }
  
    .mainContent {
      padding: 16px; // 모바일용 여백으로 조정
      border-top: 1px solid #e9e9e9;
    }
  
    .mainHeader h2 {
      font-size: 22px; // 제목 크기 조정
    }
  
    // 3. 컨트롤 영역을 수직으로 쌓기
    .controls {
      flex-direction: column;
      align-items: stretch; // 요소들을 꽉 채움
      gap: 12px;
    }
  
    .searchBar input {
      max-width: none; // 너비 제한 해제
    }
    
    .actions {
      // '양식 추가하기' 버튼도 꽉 채움
      .addButton {
        width: 100%;
      }
    }
  
    // 4. 템플릿 목록 아이템 스타일 조정
    .templateItem {
        display: flex;
        /* 1. 자식 요소들을 수직 중앙에 정렬합니다. */
        align-items: center; 
        padding: 1.25rem 1rem;
        border-bottom: 1px solid #f1f3f5;
        transition: background-color 0.2s;
        /* 2. 자식 요소들 사이에 간격을 줍니다. */
        gap: 1rem; 
    
        &:last-child {
            border-bottom: none;
        }
    
        &:hover {
            background-color: #fafafa;
        }
    }
  
    .checkboxContainer {
        /* 체크박스는 크기가 변하지 않도록 합니다. */
        flex-shrink: 0;
        padding-right: 0.5rem; /* 오른쪽 여백 조정 */
        
        input[type="checkbox"] {
            width: 18px;
            height: 18px;
        }
    }
    .templateDetails {
        /* 3. 남는 공간을 모두 차지하도록 설정합니다. */
        flex-grow: 1; 
        /* 4. 내용이 길어져도 줄어들 수 있도록 허용합니다. (중요!) */
        min-width: 0; 
    }
    
    .templateTitle {
        font-size: 1.05rem;
        font-weight: 600;
        color: #343a40;
        margin-bottom: 0.25rem;
    }
    
    .templateDescription {
        font-size: 0.9rem;
        color: #6c757d;
        /* 5. 단어가 길어져도 자연스럽게 줄바꿈이 되도록 합니다. */
        word-break: break-word; 
    }
    
    .templateActions {
        /* 6. 버튼 영역은 크기가 줄어들지 않도록 고정합니다. */
        flex-shrink: 0; 
        display: flex;
        gap: 0.5rem; /* 버튼 사이 간격 */
    
        button {
            background: #fff;
            border: 1px solid #ced4da;
            color: #495057;
            padding: 0.4rem 1rem;
            font-size: 0.9rem;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s, border-color 0.2s;
            /* 버튼 텍스트가 줄바꿈되지 않도록 합니다. */
            white-space: nowrap; 
    
            &:hover {
                background-color: #f8f9fa;
                border-color: #adb5bd;
            }
            
            &.deleteButton { // 삭제 버튼에만 특별히 스타일을 주고 싶을 때 사용
                &:hover {
                    border-color: #dc3545;
                    color: #dc3545;
                }
            }
        }
    }
    
    .noResults {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        text-align: center;
        color: #868e96;
        font-size: 1rem;
    } 
    
    /* --- 반응형 스타일은 기존 코드를 그대로 유지 --- */
    @media (max-width: 768px) {
        /* ... (기존 반응형 코드) ... */
        .templateItem {
          flex-direction: column;
          align-items: flex-start;
          gap: 12px;
          padding: 16px;
        }
        
        .templateActions {
          width: 100%;
          display: flex;
          justify-content: flex-end;
          gap: 8px;
        }
    }
}

@media (min-width: 769px) {
  .controls {
    display: grid;
    grid-template-columns: 1fr auto auto; /* 검색 | 전체 | 추가 */
    align-items: center;
    column-gap: 16px;
    overflow: visible; /* 데스크톱에서는 스크롤 제거 */
  }
  .filterTabs { white-space: nowrap; }
  .actions { white-space: nowrap; }
  .actions .addButton { width: auto; }
}

@media (max-width: 576px) {
  .controls {
    flex-wrap: wrap; /* 두 줄 배치로 변경 */
    gap: 10px;
  }
  .searchBar {
    order: 1;
    flex: 1 1 100%;
    input { max-width: none; }
  }
  .filterTabs {
    order: 2;
    flex: 1 1 auto;
  }
  .actions {
    order: 3;
    flex: 1 1 100%;
    display: flex;
    justify-content: flex-end;
    .addButton { width: 100%; }
  }
}