/* ==========================================================================
   Approval Box Common Stylesheet (Upgraded Version)
   - 애니메이션, 반응형, 시각적 완성도를 개선한 최종 버전입니다.
   ========================================================================== */

// ★★★ 1. 변수 정의로 일관성 및 유지보수성 향상 ★★★
$primary-color: #007bff;
$border-color: #e9ecef;
$background-color: #f8f9fa;
$text-color-dark: #2c3e50;
$text-color-light: #7f8c8d;
$shadow-light: 0 4px 6px rgba(0, 0, 0, 0.05);
$shadow-medium: 0 6px 12px rgba(0, 0, 0, 0.08);
$border-radius: 8px;
$transition-speed: 0.25s;

/* --- 페이지 컨테이너 --- */
.container {
  display: flex;
  flex-direction: column;
  gap: 24px;
  height: 100%;
  animation: fadeInUp $transition-speed * 2 ease-out;
}

.sectionTitle {
  font-size: 22px;
  font-weight: 700;
  color: $text-color-dark;
  padding-bottom: 12px;
  /* 딱딱한 border 대신 부드러운 그림자로 변경 */
  border-bottom: 1px solid $border-color;
  margin: 0;
}

/* --- 상단 정보 배너 --- */
.resultInfo {
  background: lighten($primary-color, 40%);
  color: darken($primary-color, 10%);
  padding: 12px 16px;
  border-radius: $border-radius;
  font-size: 14px;
  font-weight: 500;
  border-left: 4px solid $primary-color;
}

/* --- 목록 --- */
.list {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* --- 페이지네이션 --- */
.paginationContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 24px 0 8px 0;
}

/* --- 로딩, 에러, 데이터 없음 상태 --- */
.loading,
.error {
  text-align: center;
  padding: 50px;
  font-size: 16px;
  color: $text-color-light;
}

.error {
  color: #e74c3c;
  animation: shake 0.5s ease-in-out;
}

/* ★★★ 2. 애니메이션 및 전환(Transitions) 개선 ★★★ */
@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(15px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

// 목록 아이템이 순차적으로 나타나는 애니메이션
.list > * {
  animation: fadeInUp $transition-speed * 2 ease-out forwards;
  opacity: 0;

  // SCSS의 for문을 사용하여 딜레이를 동적으로 생성
  @for $i from 1 through 10 {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * 0.05}s;
    }
  }
}


/* ★★★ 3. 반응형 (Responsive) 디자인 강화 ★★★ */
@media (max-width: 768px) {
  .container { 
    gap: 20px; 
  }
  .sectionTitle { 
    font-size: 20px; 
  }
  .list { 
    gap: 12px; 
  }
}

// 더 작은 화면을 위한 추가 브레이크포인트
@media (max-width: 480px) {
  .container {
    gap: 16px;
  }
  .sectionTitle {
    font-size: 18px;
  }
  .resultInfo {
    font-size: 13px;
    padding: 10px 12px;
  }
}

/* /src/pages/approval/ApprovalBoxList.module.scss */
/* 파일 맨 아래에 아래 코드를 추가합니다. */

/* --- 목록 영역을 감싸는 상대 위치 컨테이너 --- */
.listWrapper {
  position: relative;
  min-height: 300px; /* 로딩 중에도 최소 높이 유지 */
}

/* --- 로딩 오버레이 --- */
.loadingOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.7); /* 반투명 흰색 배경 */
  z-index: 10;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 12px;
  border-radius: 8px; /* 부모 컨테이너의 radius와 맞춤 */
  transition: opacity 0.3s ease;

  /* 로딩 스피너 애니메이션 */
  .spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  span {
    font-size: 14px;
    font-weight: 500;
    color: #555;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}